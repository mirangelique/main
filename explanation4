Лабораторная работа 4
Задание 1: Формирование исходного файла GenBank

•  Цель: Создать единый файл GenBank, содержащий не менее 10 кодирующих областей (CDS) из выбранных двух биологических видов.
•  Задачи:
  1. Выбрать два биологических вида.
  2. Найти на сайте NCBI для каждого вида по 5 записей, содержащих complete cds.
  3. Скачать эти записи в формате GenBank.
  4. Объединить полученные файлы в один файл.
•  Инструменты:
  •  Web-браузер (для работы с NCBI).
  •  Biopython (Bio.SeqIO): Для чтения и записи файлов GenBank.
  •  Текстовый редактор (опционально, для ручного объединения файлов).

Задание 2: GC-составы

•  Цель: Прочитать все записи из файла GenBank и вывести их в порядке возрастания GC-состава.
•  Задачи:
  1. Прочитать файл GenBank, созданный в задании 1.
  2. Для каждой записи определить GC-состав.
  3. Отсортировать записи по GC-составу в порядке возрастания.
  4. Вывести записи в отсортированном порядке, указав название записи и ее GC-состав.
•  Инструменты:
  •  Biopython: Для чтения файла GenBank и получения последовательностей.
  •  Python: Для вычисления GC-состава, сортировки и вывода данных.
•  Алгоритмы:
  1. Чтение файла GenBank: Использование Bio.SeqIO.parse() для чтения записей из файла GenBank.
  2. Вычисление GC-состава:
    *  Для каждой записи получить последовательность нуклеотидов (record.seq).
    *  Подсчитать количество G и C в последовательности.
    *  Разделить сумму G и C на общую длину последовательности для получения GC-состава.
  3. Сортировка записей:
    *  Создать список кортежей, где каждый кортеж содержит название записи и ее GC-состав.
    *  Использовать функцию sorted() для сортировки списка кортежей по GC-составу (в порядке возрастания).
  4. Вывод результатов: Вывести название каждой записи и ее GC-состав в отсортированном порядке.
•  Выводы: Записи из файла GenBank успешно отсортированы и выведены в порядке возрастания GC-состава.

Задание 3: Трансляция

•  Цель: Вывести все белковые последовательности, полученные в результате трансляции кодирующих областей (CDS) в заданных последовательностях GenBank, указав, какой участок какой последовательности кодирует каждую белковую последовательность.
•  Задачи:
  1. Прочитать файл GenBank, созданный в задании 1.
  2. Для каждой записи найти кодирующие области (CDS).
  3. Для каждой CDS извлечь соответствующую последовательность нуклеотидов.
  4. Транслировать последовательность нуклеотидов в белковую последовательность.
  5. Вывести название записи, информацию о CDS (местоположение), и полученную белковую последовательность.
•  Инструменты:
  •  Biopython : Для чтения файла GenBank, получения последовательностей и информации о CDS.
  •  Python: Для обработки строк и вывода данных.
•  Алгоритмы:
  1. Чтение файла GenBank: Использование Bio.SeqIO.parse() для чтения записей из файла GenBank.
  2. Поиск CDS:
    *  Для каждой записи перебрать признаки (record.features).
    *  Определить, является ли признак CDS (feature.type == "CDS").
  3. Извлечение последовательности CDS:
    *  Если признак является CDS, получить его местоположение (feature.location).
    *  Извлечь последовательность нуклеотидов, соответствующую этому местоположению, из последовательности записи (record.seq[feature.location.start:feature.location.end]).
    *  Учесть ориентацию CDS (прямая или обратная комплементарная) с помощью feature.location.strand. Если ориентация обратная (-1), то необходимо взять обратную комплементарную последовательность (.reverse_complement()).
  4. Трансляция последовательности:
    *  Транслировать последовательность нуклеотидов в белковую последовательность с помощью seq.translate().
  5. Вывод результатов: Вывести название записи, местоположение CDS и полученную белковую последовательность.
•  Выводы: Для каждой CDS в файле GenBank успешно получена и выведена соответствующая белковая последовательность с указанием местоположения CDS.
